version: '3.7'

services:
  ##########################
  ##    GOV ADVICE API    ##
  ##########################
  govadviceapi:
    build: 
      context: ./..
      dockerfile: src/GovernmentAdviceApi/Dockerfile
    ports: 
      - 8887:80
    depends_on:
      - mydaprtestredis
      - placement
    networks:
      - hello-dapr
  ##########################
  ##  GOV ADVICE SIDECAR  ##
  ##########################
  govadviceapi-dapr:
    image: daprio/daprd:latest
    command: ["./daprd", 
      "-app-id", "govadviceapi", 
      "-app-port", "80", 
      "-components-path", "/components", 
      "-placement-host-address", "placement:50010",
      "--config", "/components/observ.yaml"]
    volumes:
        - "./../my-components/:/components" # Mount our components folder for the runtime to use
    depends_on:
      - govadviceapi
      - zipkinobserv
    network_mode: service:govadviceapi
  ##########################
  ##      NAMES API       ##
  ##########################
  namesapi:
    build: 
      context: ./..
      dockerfile: src/NamesApi/Dockerfile
    ports: 
      - 8888:80
    depends_on:
      - mydaprtestredis
      - placement
    networks:
      - hello-dapr
  
  ##########################
  ##    NAMES  SIDECAR    ##
  ##########################
  namesapi-dapr:
    image: daprio/daprd:latest
    command: ["./daprd", 
      "-app-id", "namesapi", 
      "-app-port", "80", 
      "-components-path", "/components", 
      "-placement-host-address", "placement:50010",
      "--config", "/components/observ.yaml"]
    volumes:
        - "./../my-components/:/components" # Mount our components folder for the runtime to use
    depends_on:
      - namesapi
      - zipkinobserv
    network_mode: service:namesapi
  ##########################
  ##    COVID LAB API     ##
  ##########################
  covidlabapi:
    build: 
      context: ./..
      dockerfile: src/CovidTestingLabApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports: 
      - 8889:80
    depends_on:
      - mydaprtestredis
      - placement
      - rabbitmq
      - eventstoredb
    networks:
      - hello-dapr
  
  ##########################
  ##  COVID LAB SIDECAR   ##
  ##########################
  covidlabapi-dapr:
    image: daprio/daprd:latest
    command: ["./daprd", 
      "-app-id", "covidlabapi", 
      "-app-port", "80", 
      "-components-path", "/components", 
      "-placement-host-address", "placement:50010",
      "--config", "/components/observ.yaml" ]
    volumes:
        - "./../my-components/:/components" # Mount our components folder for the runtime to use
    depends_on:
      - covidlabapi
      - rabbitmq
      - zipkinobserv
    network_mode: service:covidlabapi
  ##########################
  ##      REDIS CACHE     ##
  ##########################
  mydaprtestredis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - hello-dapr
  ############################
  ## DAPR PLACEMENT SERVICE ##
  ############################
  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50010:50006"
    networks:
      - hello-dapr
  ############################
  ## ZIPKIN OBSERVABILITY   ##
  ############################
  zipkinobserv:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    depends_on:
      - placement
    networks:
      - hello-dapr
  ##############################
  ##  RABBIT MQ W/ MANAGEMENT ##
  ##############################
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 8089:15672
      - 5672:5672
    networks:
      - hello-dapr
  ############################
  ##       SQL SERVER       ##
  ############################
  # sqlserver:
  #   image: "mcr.microsoft.com/mssql/server"
  #   environment:
  #     - SA_PASSWORD="Hell0W0rld!"
  #     - ACCEPT_EULA="Y"
  ############################
  ##       EVENT STORE      ##
  ############################
  eventstoredb:
    image: eventstore/eventstore:20.10.2-buster-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore
    networks:
      - hello-dapr
  ############################
  ##    ELASTIC SEARCH      ##
  ############################
  # elasticsearch:
  #   container_name: es-container
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
  #   environment:
  #     - xpack.security.enabled=false
  #     - "discovery.type=single-node"
  #   networks:
  #     - hello-dapr
  #     - es-net
  #   ports:
  #     - 9200:9200
  ############################
  ##        KIBANA          ##
  ############################
  # kibana:
  #   container_name: kb-container
  #   image: docker.elastic.co/kibana/kibana:7.11.0
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://es-container:9200
  #   networks:
  #     - hello-dapr
  #     - es-net
  #   depends_on:
  #     - elasticsearch
  #   ports:
  #     - 5601:5601 
networks:
  hello-dapr:
  # es-net:
  #   driver: bridge
volumes:
  eventstore-volume-data:
  eventstore-volume-logs:


  